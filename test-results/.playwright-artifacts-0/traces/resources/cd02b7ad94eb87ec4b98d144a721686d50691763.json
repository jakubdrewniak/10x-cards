{"generation_id":45,"flashcards_proposals":[{"front":"What does the useState Hook do in React function components?","back":"useState is a Hook that lets you add and manage state within function components by returning a state variable and a setter function.","source":"ai-full"},{"front":"When and why would you use the useEffect Hook in React?","back":"useEffect is used to perform side effects (such as data fetching, subscriptions, or manually changing the DOM) in function components. It runs after the component renders and can be configured to run only when specified dependencies change.","source":"ai-full"},{"front":"How does the useContext Hook simplify context consumption in React?","back":"useContext lets you subscribe to a React context directly within a function component without wrapping it in a Consumer component, avoiding extra nesting and boilerplate.","source":"ai-full"},{"front":"What problem does the useReducer Hook solve, and how does it work?","back":"useReducer helps manage complex local state logic by providing a reducer function and an initial state. It returns the current state and a dispatch function to update state based on action objects.","source":"ai-full"},{"front":"How does useCallback help optimize React components?","back":"useCallback memoizes a callback function, returning the same function instance between renders unless its dependencies change, which prevents unnecessary re-renders of child components that depend on that function.","source":"ai-full"},{"front":"In what way is useMemo similar to useCallback, and when should you use it?","back":"useMemo memoizes the result of a computation (value) instead of a function. You use it to avoid expensive recalculations on every render by specifying dependencies that trigger recomputation.","source":"ai-full"},{"front":"What is the purpose of the useRef Hook in React?","back":"useRef returns a mutable ref object whose .current property persists across renders. It's commonly used to access DOM elements directly or to store mutable values without causing re-renders.","source":"ai-full"},{"front":"How does useImperativeHandle customize a component's instance value for parent components?","back":"useImperativeHandle allows a function component to customize the value exposed to parent refs by specifying which methods or properties should be accessible, effectively controlling the imperative API.","source":"ai-full"},{"front":"What distinguishes useLayoutEffect from useEffect in React?","back":"useLayoutEffect fires synchronously after all DOM mutations but before the browser has painted, allowing you to perform DOM measurements or synchronous updates. useEffect runs asynchronously after painting.","source":"ai-full"},{"front":"How does the useDebugValue Hook assist with custom hooks in React DevTools?","back":"useDebugValue lets you display a label or formatted value for a custom hook in React DevTools, making it easier to inspect hook state and debug complex logic.","source":"ai-full"}],"generated_count":10}